<?php

require_once('./vendor/autoload.php');

class Shop
{
    /**
     * 商品名を取得する
     *
     * 商品ｺｰﾄﾞから商品名を取得する
     *
     * @param int $code 商品ｺｰﾄﾞ
     * @return string 商品名
     * @throws \SKJ\AppException\Logic\EnvironmentException 商品管理ﾌｧｲﾙが開けない
     * @throws \SKJ\AppException\Runtime\OutOfBoundsException 存在しない商品ｺｰﾄﾞ
     * @throws \SKJ\AppException\Logic\UnexpectedValueException 異常終了
     */
    public function getItemName($code)
    {
        if (($fp = @fopen('items.csv', 'r')) === false) {
            throw new \SKJ\AppException\Logic\EnvironmentException(
                '商品管理ﾌｧｲﾙが見つかりません!!'
            );
        }

        $itemList = [];

        while (($line = fgetcsv($fp)) !== false) {

            $itemList[(int)$line[0]] = $line[1];
        }

        if (array_key_exists($code, $itemList) === false) {
            throw new \SKJ\AppException\Runtime\OutOfBoundsException(
                '該当する商品がありません!!'
            );
        }

        if (fclose($fp) === false) {
            throw new \SKJ\AppException\Logic\UnexpectedValueException(
                '異常終了しました!!'
            );
        }

        return $itemList[$code];
    }

    /**
     * 全ての在庫状況を読み込む
     *
     * 戻り値 - 在庫状況一覧
     *
     * <code>
     * [
     *     [
     *         'code' => (int)商品ｺｰﾄﾞ,
     *         'name' => (string)商品名,
     *         'quantity' => (int)在庫数,
     *     ],...(以後繰り返し)
     * ]
     * </code>
     *
     * @return array 在庫状況が格納された配列
     * @throws \SKJ\AppException\Logic\EnvironmentException 在庫管理ﾌｧｲﾙが開けない
     * @throws \SKJ\AppException\Runtime\EmptyResultException 在庫が未登録
     * @throws \SKJ\AppException\Logic\UnexpectedValueException 異常終了
     */
    public function readStock()
    {
        if (($fp = @fopen('stock.csv', 'r')) === false) {
            throw new \SKJ\AppException\Logic\EnvironmentException(
                '在庫管理ﾌｧｲﾙが見つかりません!!'
            );
        }

        $stock = [];

        while (($line = fgetcsv($fp)) !== false) {
            $stock[] = [
                'code' => (int)$line[0],
                'name' => $this->getItemName((int)$line[0]),
                'quantity' => (int)$line[1],
            ];
        }

        if (empty($stock)) {
            throw new \SKJ\AppException\Runtime\EmptyResultException(
                '在庫がありません!!'
            );
        }

        if (fclose($fp) === false) {
            throw new \SKJ\AppException\Logic\UnexpectedValueException(
                '異常終了しました!!'
            );
        }

        return $stock;
    }
}

$shop = new Shop();

try {

    foreach ($shop->readStock() as $item) {

        printf('%sの在庫数は%d個です'.PHP_EOL, $item['name'], $item['quantity']);
    }

} catch (\SKJ\AppException\Logic\EnvironmentException $e) {

    die('在庫管理ファイルに問題があります'.PHP_EOL);

} catch (\SKJ\AppException\Runtime\EmptyException $e) {

    die('在庫が存在しません'.PHP_EOL);

} catch (\SKJ\AppException\Logic\UnexpectedValueException $e) {

    die('異常終了です'.PHP_EOL);
}